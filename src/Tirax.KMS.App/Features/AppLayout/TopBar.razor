@using Tirax.KMS.Server
@inherits ReactiveComponentBase<AppModel.ViewModel>
@inject NavigationManager NavigationManager
@inject IKmsServer Server
@inject AppModel.ViewModel AppModel

<MudAppBar Elevation="1">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                   OnClick="ToggleIsOpen" />
    
    <MudLink Typo="Typo.h5" Color="Color.Surface" Underline="Underline.None" Class="mx-3" 
             OnClick="GoHome">Tirax KMS</MudLink>
    
    <AuthorizeView Policy="@KmsAuthPolicy.User">
        <MudAutocomplete T="Domain.Concept" Label="Search" SelectOnClick="true" Variant="Variant.Outlined"
                         Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" 
                         AdornmentColor="Color.Secondary" Margin="Margin.Dense" DebounceInterval="200"
                         SearchFuncWithCancel="Search"
                         ValueChanged="concept => ViewModel!.CurrentTopic = concept.Id">
        </MudAutocomplete>
    </AuthorizeView>
</MudAppBar>

@code {

    protected override void OnInitialized() {
        ViewModel = AppModel;
    }
    
    async Task<IEnumerable<Domain.Concept>> Search(string s, CancellationToken ct) =>
        string.IsNullOrWhiteSpace(s)
            ? Enumerable.Empty<Domain.Concept>()
            : (await Server.Search(s.Trim())).Map(i => i.Concept);

    Task ToggleIsOpen() => ViewModel!.ToggleDrawerOpen.Execute().ToTask();
    void GoHome() => NavigationManager.NavigateTo("/");
}